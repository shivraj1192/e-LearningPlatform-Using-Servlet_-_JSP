/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.33
 * Generated at: 2024-12-03 06:00:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("	<meta charset=\"utf-8\">\n");
      out.write("	<meta content=\"width=device-width, initial-scale=1.0\" name=\"viewport\">\n");
      out.write("	  <title>E-Learning Platform</title>\n");
      out.write("	  <meta name=\"description\" content=\"\">\n");
      out.write("	  <meta name=\"keywords\" content=\"\">\n");
      out.write("	\n");
      out.write("	  <!-- Favicons -->\n");
      out.write("	  <link href=\"assets/img/favicon.png\" rel=\"icon\">\n");
      out.write("	  <link href=\"assets/img/apple-touch-icon.png\" rel=\"apple-touch-icon\">\n");
      out.write("	\n");
      out.write("	  <!-- Fonts -->\n");
      out.write("	  <link href=\"https://fonts.googleapis.com\" rel=\"preconnect\">\n");
      out.write("	  <link href=\"https://fonts.gstatic.com\" rel=\"preconnect\" crossorigin>\n");
      out.write("	  <link href=\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Raleway:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\" rel=\"stylesheet\">\n");
      out.write("	\n");
      out.write("	  <!-- Vendor CSS Files -->\n");
      out.write("	  <link href=\"assets/vendor/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("	  <link href=\"assets/vendor/bootstrap-icons/bootstrap-icons.css\" rel=\"stylesheet\">\n");
      out.write("	  <link href=\"assets/vendor/aos/aos.css\" rel=\"stylesheet\">\n");
      out.write("	  <link href=\"assets/vendor/glightbox/css/glightbox.min.css\" rel=\"stylesheet\">\n");
      out.write("	  <link href=\"assets/vendor/swiper/swiper-bundle.min.css\" rel=\"stylesheet\">\n");
      out.write("	\n");
      out.write("	  <!-- Main CSS File -->\n");
      out.write("	  <link href=\"assets/css/main.css\" rel=\"stylesheet\">\n");
      out.write("    <style>\n");
      out.write("      *{\n");
      out.write("        padding: 0;\n");
      out.write("        margin: 0;\n");
      out.write("        box-sizing: border-box;\n");
      out.write("      } \n");
      out.write("      #page-1{\n");
      out.write("        width: 100%;\n");
      out.write("        height: 100vh;\n");
      out.write("        display: flex;\n");
      out.write("        flex-direction: column;\n");
      out.write("        justify-content: center;\n");
      out.write("        align-items: center;\n");
      out.write("      }\n");
      out.write("     \n");
      out.write(".form {\n");
      out.write("  display: flex;\n");
      out.write("  flex-direction: column;\n");
      out.write("  gap: 10px;\n");
      out.write("  max-width: 350px;\n");
      out.write("  background-color: #fff;\n");
      out.write("  padding: 20px;\n");
      out.write("  border-radius: 20px;\n");
      out.write("  position: relative;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".title {\n");
      out.write("  font-size: 28px;\n");
      out.write("  color: royalblue;\n");
      out.write("  font-weight: 600;\n");
      out.write("  letter-spacing: -1px;\n");
      out.write("  position: relative;\n");
      out.write("  display: flex;\n");
      out.write("  align-items: center;\n");
      out.write("  padding-left: 30px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".title::before,.title::after {\n");
      out.write("  position: absolute;\n");
      out.write("  content: \"\";\n");
      out.write("  height: 16px;\n");
      out.write("  width: 16px;\n");
      out.write("  border-radius: 50%;\n");
      out.write("  left: 0px;\n");
      out.write("  background-color: royalblue;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".title::before {\n");
      out.write("  width: 18px;\n");
      out.write("  height: 18px;\n");
      out.write("  background-color: royalblue;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".title::after {\n");
      out.write("  width: 18px;\n");
      out.write("  height: 18px;\n");
      out.write("  animation: pulse 1s linear infinite;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".message, .signin {\n");
      out.write("  color: rgba(88, 87, 87, 0.822);\n");
      out.write("  font-size: 14px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".signin {\n");
      out.write("  text-align: center;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".signin a {\n");
      out.write("  color: royalblue;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".signin a:hover {\n");
      out.write("  text-decoration: underline royalblue;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".flex {\n");
      out.write("  display: flex;\n");
      out.write("  width: 100%;\n");
      out.write("  gap: 6px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".form label {\n");
      out.write("  position: relative;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".form label .input {\n");
      out.write("  width: 100%;\n");
      out.write("  padding: 10px 10px 20px 10px;\n");
      out.write("  outline: 0;\n");
      out.write("  border: 1px solid rgba(105, 105, 105, 0.397);\n");
      out.write("  border-radius: 10px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".form label .input + span {\n");
      out.write("  position: absolute;\n");
      out.write("  left: 10px;\n");
      out.write("  top: 15px;\n");
      out.write("  color: grey;\n");
      out.write("  font-size: 0.9em;\n");
      out.write("  cursor: text;\n");
      out.write("  transition: 0.3s ease;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".form label .input:placeholder-shown + span {\n");
      out.write("  top: 15px;\n");
      out.write("  font-size: 0.9em;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".form label .input:focus + span,.form label .input:valid + span {\n");
      out.write("  top: 30px;\n");
      out.write("  font-size: 0.7em;\n");
      out.write("  font-weight: 600;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".form label .input:valid + span {\n");
      out.write("  color: green;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".submit {\n");
      out.write("  border: none;\n");
      out.write("  outline: none;\n");
      out.write("  background-color: royalblue;\n");
      out.write("  padding: 10px;\n");
      out.write("  border-radius: 10px;\n");
      out.write("  color: #fff;\n");
      out.write("  font-size: 16px;\n");
      out.write("  transform: .3s ease;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".submit:hover {\n");
      out.write("  background-color: rgb(56, 90, 194);\n");
      out.write("}\n");
      out.write("\n");
      out.write("@keyframes pulse {\n");
      out.write("  from {\n");
      out.write("    transform: scale(0.9);\n");
      out.write("    opacity: 1;\n");
      out.write("  }\n");
      out.write("\n");
      out.write("  to {\n");
      out.write("    transform: scale(1.8);\n");
      out.write("    opacity: 0;\n");
      out.write("  }\n");
      out.write("}\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	<header id=\"header\" class=\"header d-flex align-items-center fixed-top\">\n");
      out.write("    <div class=\"container-fluid container-xl position-relative d-flex align-items-center justify-content-between\">\n");
      out.write("\n");
      out.write("      <a href=\"index.html\" class=\"logo d-flex align-items-center\">\n");
      out.write("        <!-- Uncomment the line below if you also wish to use an image logo -->\n");
      out.write("        <!-- <img src=\"assets/img/logo.png\" alt=\"\"> -->\n");
      out.write("        <h1 class=\"sitename\" style=\"color: black;\"  >E-Learn</h1>\n");
      out.write("      </a>\n");
      out.write("\n");
      out.write("      <nav id=\"navmenu\" class=\"navmenu\" style=\"color: black;\">\n");
      out.write("        <ul>\n");
      out.write("          <li><a href=\"#hero\" style=\"color: black;\"  >Home</a></li>\n");
      out.write("          <li><a href=\"#about\" style=\"color: black;\">Courses</a></li>\n");
      out.write("          <li><a href=\"#features\" style=\"color: black;\">Articles</a></li>\n");
      out.write("          <li><a href=\"#gallery\" style=\"color: black;\">Tutorials</a></li>\n");
      out.write("          <li><a href=\"#team\" style=\"color: black;\">Contact</a></li>\n");
      out.write("          <!-- \n");
      out.write("          <li><a href=\"#pricing\">Pricing</a></li>\n");
      out.write("          <li class=\"dropdown\"><a href=\"#\"><span>Dropdown</span> <i class=\"bi bi-chevron-down toggle-dropdown\"></i></a>\n");
      out.write("            <ul>\n");
      out.write("              <li><a href=\"#\">Dropdown 1</a></li>\n");
      out.write("              <li class=\"dropdown\"><a href=\"#\"><span>Deep Dropdown</span> <i class=\"bi bi-chevron-down toggle-dropdown\"></i></a>\n");
      out.write("                <ul>\n");
      out.write("                  <li><a href=\"#\">Deep Dropdown 1</a></li>\n");
      out.write("                  <li><a href=\"#\">Deep Dropdown 2</a></li>\n");
      out.write("                  <li><a href=\"#\">Deep Dropdown 3</a></li>\n");
      out.write("                  <li><a href=\"#\">Deep Dropdown 4</a></li>\n");
      out.write("                  <li><a href=\"#\">Deep Dropdown 5</a></li>\n");
      out.write("                </ul>\n");
      out.write("              </li>\n");
      out.write("              <li><a href=\"#\">Dropdown 2</a></li>\n");
      out.write("              <li><a href=\"#\">Dropdown 3</a></li>\n");
      out.write("              <li><a href=\"#\">Dropdown 4</a></li>\n");
      out.write("            </ul>\n");
      out.write("          </li>\n");
      out.write("           -->\n");
      out.write("          <li><a href=\"login.jsp\" style=\"color: black;\" class=\"active\">LogIn/SignUp</a></li>\n");
      out.write("        </ul>\n");
      out.write("        <i class=\"mobile-nav-toggle d-xl-none bi bi-list\"></i>\n");
      out.write("      </nav>\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("  </header>\n");
      out.write("  <div class=\"page\" id=\"page-1\">\n");
      out.write("    ");
 String error = request.getParameter("error");
       if (error != null) { 
      out.write("\n");
      out.write("        <div class=\"alert alert-danger\" role=\"alert\" style=\"max-width: 400px; margin: 20px auto; text-align: center; padding: 10px; background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb; border-radius: 4px;\">\n");
      out.write("            ");
      out.print( error );
      out.write("\n");
      out.write("        </div>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("    <form class=\"form\" id=\"signupForm\" onsubmit=\"return validatePassword()\" action=\"SignupServlet\" method=\"post\">\n");
      out.write("    <p class=\"title\">Register </p>\n");
      out.write("    <p class=\"message\">Signup now and get full access to our app. </p>\n");
      out.write("        <div class=\"flex\">\n");
      out.write("        <label>\n");
      out.write("            <input required=\"\" placeholder=\"\" type=\"text\" class=\"input\" name=\"fname\">\n");
      out.write("            <span>Firstname</span>\n");
      out.write("        </label>\n");
      out.write("\n");
      out.write("        <label>\n");
      out.write("            <input required=\"\" placeholder=\"\" type=\"text\" class=\"input\" name=\"lname\">\n");
      out.write("            <span>Lastname</span>\n");
      out.write("        </label>\n");
      out.write("    </div>  \n");
      out.write("            \n");
      out.write("    <label>\n");
      out.write("        <input required=\"\" placeholder=\"\" type=\"test\" class=\"input\" name=\"userName\">\n");
      out.write("        <span>Username</span>\n");
      out.write("    </label> \n");
      out.write("    \n");
      out.write("    <label>\n");
      out.write("        <input required=\"\" placeholder=\"\" type=\"email\" class=\"input\" name=\"email\">\n");
      out.write("        <span>Email</span>\n");
      out.write("    </label> \n");
      out.write("        \n");
      out.write("    <label>\n");
      out.write("        <input required=\"\" placeholder=\"\" type=\"password\" class=\"input\" id=\"password\" name=\"password\">\n");
      out.write("        <span>Password</span>\n");
      out.write("    </label>\n");
      out.write("    <label>\n");
      out.write("        <input required=\"\" placeholder=\"\" type=\"password\" class=\"input\" id=\"confirmPassword\">\n");
      out.write("        <span>Confirm password</span>\n");
      out.write("    </label>\n");
      out.write("    <div id=\"passwordError\" style=\"color: red; font-size: 12px; display: none;\">Passwords do not match!</div>\n");
      out.write("    <button class=\"submit\">Submit</button>\n");
      out.write("    <p class=\"signin\">Already have an acount ? <a href=\"login.jsp\">Signin</a> </p>\n");
      out.write("</form>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("function validatePassword() {\n");
      out.write("    const password = document.getElementById('password').value;\n");
      out.write("    const confirmPassword = document.getElementById('confirmPassword').value;\n");
      out.write("    const errorDiv = document.getElementById('passwordError');\n");
      out.write("    \n");
      out.write("    if (password !== confirmPassword) {\n");
      out.write("        errorDiv.style.display = 'block';\n");
      out.write("        return false;\n");
      out.write("    }\n");
      out.write("    errorDiv.style.display = 'none';\n");
      out.write("    return true;\n");
      out.write("}\n");
      out.write("\n");
      out.write("// Real-time validation\n");
      out.write("document.getElementById('confirmPassword').addEventListener('input', function() {\n");
      out.write("    const password = document.getElementById('password').value;\n");
      out.write("    const confirmPassword = this.value;\n");
      out.write("    const errorDiv = document.getElementById('passwordError');\n");
      out.write("    \n");
      out.write("    if (password !== confirmPassword) {\n");
      out.write("        errorDiv.style.display = 'block';\n");
      out.write("    } else {\n");
      out.write("        errorDiv.style.display = 'none';\n");
      out.write("    }\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("  </div>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
